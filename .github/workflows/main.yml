---
name: devicemapper CI

# yamllint disable-line rule:truthy
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  checks:
    strategy:
      matrix:
        include:
          # MANDATORY CHECKS USING CURRENT DEVELOPMENT COMPILER
          - components: rustfmt
            toolchain: 1.53.0
            task: make -f Makefile travis_fmt
          - components: clippy
            toolchain: 1.53.0
            task: make -f Makefile clippy
          # MANDATORY TESTING USING LOWEST SUPPORTED COMPILER
          - components: cargo
            toolchain: 1.49.0
            task: >
              sudo PATH=$GITHUB_WORKSPACE/.cargo/bin:$PATH
              make -f Makefile sudo_test
          # MANDATORY TESTING ON STABLE
          - components: cargo
            toolchain: stable
            task: make -f Makefile build
          - components: cargo
            toolchain: stable
            task: >
              sudo PATH=$GITHUB_WORKSPACE/.cargo/bin:$PATH
              make -f Makefile sudo_test
          - components: cargo
            toolchain: stable
            task: make -f Makefile docs
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          components: ${{ matrix.components }}
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Install dependencies
        run: |
          sudo apt-get -q update
          sudo apt-get -y install libdevmapper-dev
      - name: Test ${{ matrix.task }} on ${{ matrix.toolchain }} toolchain
        run: ${{ matrix.task }}

  android-build:
    env:
      TARGET: aarch64-linux-android
    runs-on: ubuntu-18.04
    container:
      image: docker.io/circleci/android:api-30-ndk
      options: --user 0:0
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get -q update
          sudo apt-get -y install libclang-dev
      - uses: actions-rs/toolchain@v1
        with:
          components: cargo
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - name: Add Android target
        run: rustup target add ${{ env.TARGET }}
      - name: Cross compilation build on Android
        run: cargo build --target ${{ env.TARGET }}

  musl-checks:
    runs-on: ubuntu-18.04
    container:
      image: alpine
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: apk add cargo clang-dev linux-headers make rust
      - name: Test build on Alpine Linux
        run: make -f Makefile build

  checks-with-ci-repo:
    strategy:
      matrix:
        include:
          - task: >
              SET_LOWER_BOUNDS=./set_lower_bounds
              MANIFEST_PATH=../../Cargo.toml
              make -f ../../Makefile verify-dependency-bounds
    runs-on: ubuntu-18.04
    container:
      image: fedora:33  # CURRENT DEVELOPMENT ENVIRONMENT
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies for Fedora
        run: >
          dnf install -y
          clang
          curl
          git
          make
          openssl-devel
          python-requests
          python-semantic_version
      - uses: actions-rs/toolchain@v1
        with:
          components: cargo
          toolchain: 1.53.0  # CURRENT DEVELOPMENT TOOLCHAIN
          override: true
      - name: Check out ci repo
        run: git clone https://github.com/stratis-storage/ci.git
      - name: Run ${{ matrix.task }}
        run: ${{ matrix.task }}
        working-directory: ./ci/dependency_management

  # VERIFICATION OF TEST INFRASTRUCTURE
  yamllint:
    runs-on: ubuntu-18.04
    container:
      image: fedora:33  # CURRENT DEVELOPMENT ENVIRONMENT
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies for Fedora
        run: dnf install -y make yamllint
      - name: Run yamllint
        run: make -f Makefile yamllint
