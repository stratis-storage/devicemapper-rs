---
name: devicemapper nightly

# yamllint disable-line rule:truthy
on:
  schedule:
    - cron: 0 3 * * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  allowed_failures:
    continue-on-error: true
    strategy:
      matrix:
        include:
          - components: cargo
            toolchain: 1.86.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
            task: make -f Makefile audit
          # Allowed because a failure may occur after a new Rust stable
          # version is released.
          - components: clippy
            toolchain: stable
            task: make -f Makefile clippy
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          components: ${{ matrix.components }}
          toolchain: ${{ matrix.toolchain }}
      - name: Install dependencies
        run: |
          sudo apt-get -q update
          sudo apt-get -y install libdevmapper-dev
      - uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-audit
      - name: Test ${{ matrix.task }} on ${{ matrix.toolchain }} toolchain
        run: ${{ matrix.task }}

  checks-with-ci-repo:
    runs-on: ubuntu-22.04
    container:
      image: fedora:41  # CURRENT DEVELOPMENT ENVIRONMENT
    steps:
      - name: Install git for checkout action
        run: dnf install -y git
      - uses: actions/checkout@v4
        with:
          path: devicemapper-rs
      - name: Install dependencies for Fedora
        run: >
          dnf install -y
          clang
          curl
          make
          openssl-devel
          python-requests
          python-semantic_version
      - uses: dtolnay/rust-toolchain@master
        with:
          components: cargo
          toolchain: 1.86.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
      - name: Check out ci repo
        uses: actions/checkout@v4
        with:
          path: ci
          repository: stratis-storage/ci
      - name: Run comparison of version specs with -sys package
        # yamllint disable rule:line-length
        run: |
          COMPARE_FEDORA_VERSIONS=$GITHUB_WORKSPACE/ci/dependency_management/compare_fedora_versions FEDORA_RELEASE=rawhide make -f ../Makefile check-fedora-versions
          COMPARE_FEDORA_VERSIONS=$GITHUB_WORKSPACE/ci/dependency_management/compare_fedora_versions FEDORA_RELEASE=f42 make -f ../Makefile check-fedora-versions
          COMPARE_FEDORA_VERSIONS=$GITHUB_WORKSPACE/ci/dependency_management/compare_fedora_versions FEDORA_RELEASE=f41 make -f ../Makefile check-fedora-versions
          COMPARE_FEDORA_VERSIONS=$GITHUB_WORKSPACE/ci/dependency_management/compare_fedora_versions FEDORA_RELEASE=f40 make -f ../Makefile check-fedora-versions
        working-directory: devicemapper-rs/devicemapper-rs-sys
      - name: Run comparison of version specs with package
        # yamllint disable rule:line-length
        run: |
          COMPARE_FEDORA_VERSIONS=$GITHUB_WORKSPACE/ci/dependency_management/compare_fedora_versions FEDORA_RELEASE=rawhide make -f Makefile check-fedora-versions
          COMPARE_FEDORA_VERSIONS=$GITHUB_WORKSPACE/ci/dependency_management/compare_fedora_versions FEDORA_RELEASE=f42 make -f Makefile check-fedora-versions
          COMPARE_FEDORA_VERSIONS=$GITHUB_WORKSPACE/ci/dependency_management/compare_fedora_versions FEDORA_RELEASE=f41 make -f Makefile check-fedora-versions
          COMPARE_FEDORA_VERSIONS=$GITHUB_WORKSPACE/ci/dependency_management/compare_fedora_versions FEDORA_RELEASE=f40 make -f Makefile check-fedora-versions
        working-directory: devicemapper-rs

  semver-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get -q update
          sudo apt-get -y install libdevmapper-dev
      - name: Do semantic version checks on devicemapper-rs-sys
        uses: obi1kenobi/cargo-semver-checks-action@v2
        with:
          verbose: true
          rust-toolchain: 1.86.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
          manifest-path: devicemapper-rs-sys
      - name: Do semantic version checks
        uses: obi1kenobi/cargo-semver-checks-action@v2
        with:
          verbose: true
          rust-toolchain: 1.86.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
